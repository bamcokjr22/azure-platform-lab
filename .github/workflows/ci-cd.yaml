name: CI/CD to AKS

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout repo
    - name: Checkout code
      uses: actions/checkout@v4

    # Log in to Azure
    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Build & Push image to ACR
    - name: Build and Push to ACR
      run: |
        az acr login --name ${{ secrets.ACR_NAME }}
        docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/sample-app:${{ github.sha }} .
        docker push ${{ secrets.ACR_NAME }}.azurecr.io/sample-app:${{ github.sha }}

    # Set AKS context
    - name: Set AKS context
      uses: azure/aks-set-context@v4
      with:
        resource-group: platform-rg
        cluster-name: platform-aks

    # Deploy if not exists
    - name: Deploy app if not exists
      run: |
        kubectl apply -f k8s/deployment.yaml

    # Update image in deployment
    - name: Update app image
      run: |
        kubectl set image deployment/sample-app sample-app=${{ secrets.ACR_NAME }}.azurecr.io/sample-app:${{ github.sha }}

    # Verify rollout
    - name: Verify Deployment
      run: |
        kubectl rollout status deployment/sample-app
        kubectl get pods -o wide
